Console. methoden
.Write
.WriteLine
.Read
.Readline

"Klasse" "name" = new() [Klasse]; // erstellen von einer Klasse 
Random dice = new Random()

Random // Klasse zum generieren von Zufälligen nicht negativen Ganzzahlen
.Next(Minimum, Maximum) // Generiert eine nummer für das verbundende Integer

Datatypes
Type        Discription                                             Size(bytes)     .NET type       Range

Int         Whole numbers                                           4               System.Int32    -2,147,483,648 - 2,147,483,648
long        Whole numbers(Bigger range)                             8               System.Int64    -9,223,372,036,854,775,808 - 9,223,372,036,854,775,808
flaot       Floating point numbers                                  4               System.Single   +- 3,4 x 10^38
double      Double precision(more accurate)floating point numbers   8               System.Double   +- 1.7 x 10^308
decimal     Monetary values                                         16              System.decimal  28 significant figures      (needs an m in the end)
char        Single character                                        2               System.char     N/A 
bool        Boolean                                                 1               System.Boolean  True or False
DateTime    Moments in time                                         8               System.DateTime 0:0:00 on 01/01/0001 to 23:59:59 on 12/31/9999
string      Sequence of characters                                  2 per character System.String   N/A

data.Length         // länge einer string
data.IndexOf()      // position eines zeichens 
data.Substring()    // gibt substring("wörter") wieder
data.ToUpper()      // konvertiert zeichenketten zu großgeschriebene zeichenketten
data.ToLower()      // konvertiert zeichenketten zu kleingeschriebene zeichenketten

$"blah blah"        // interpolation


string[i]           //i starts counting at 0, outputs letter of the index

Convert.ToDouble()  //String zu Double beispiel

integer++           //Plus 1
integer--           //Minus 1
integer +=          //Plus
integer -=          //Minus 
integer /=          //Geteilt durch
integer *=          //Multipliziert mit


==  equal           gleich
<   less            kleiner als
>   more            größer als
<=  less or equal   kleiner oder gleich als    
>=  more or equal   größer oder gleich als

&&  and             und
||  or              oder

if                  //Wenn
else                //Sonst

switch()            //Falls ... eintritt
case                //Optionen bzw. fall    e.g ||      case "red": break;      case 1: case 2: break; ist möglich (verketten)

break;              //bricht einen prozess ab bzw. verlässt eine schleife                                                       

Ternary Operators   // if else aber kürzer geschrieben
string color = "blue";
string result = (color == "blue") ? "blue" : "NOT blue";    // Ausgabe wäre hier: blue | "?" wäre hier ein IF und ":" ein else


